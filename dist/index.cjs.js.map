{"version":3,"file":"index.cjs.js","sources":["../src/components/TreeDiagram/TreeDiagram.jsx"],"sourcesContent":["import React, { useEffect, useRef } from \"react\";\r\nimport * as d3 from \"d3\";\r\nimport styles from \"./treeDiagram.module.css\";\r\n\r\nconst TreeDiagram = ({ data, initialOpenDepth = 1 }) => {\r\n  const svgRef = useRef(null);\r\n  const gRef = useRef(null);\r\n  const zoomRef = useRef(null);\r\n\r\n  const isTestEnv = typeof window !== 'undefined' && window.VITEST;\r\n\r\n  useEffect(() => {\r\n    if (!data) return;\r\n\r\n    const container = svgRef.current.parentElement;\r\n    const containerWidth = container.clientWidth;\r\n    const containerHeight = 800;\r\n\r\n    const margin = { top: 400, right: 200, bottom: 40, left: 100 };\r\n    const width = containerWidth - margin.left - margin.right;\r\n    const height = containerHeight - margin.top - margin.bottom;\r\n    const duration = 750;\r\n\r\n    let i = 0;\r\n\r\n    const root = d3.hierarchy(data);\r\n    root.y0 = height / 3;\r\n    root.x0 = 0;\r\n\r\n    collapseToDepth(root, 0, initialOpenDepth);\r\n\r\n    const svg = d3\r\n      .select(svgRef.current)\r\n      .attr(\"viewBox\", `0 0 ${containerWidth} ${containerHeight}`)\r\n      .attr(\"preserveAspectRatio\", \"xMidYMid meet\");\r\n\r\n    svg.selectAll(\"*\").remove();\r\n\r\n    // --- IMPORTANT CHANGE: create g without manual transform and let zoom own the transform ---\r\n    const g = svg.append(\"g\"); // no translate/scale here\r\n    gRef.current = g;\r\n\r\n    const zoom = d3\r\n      .zoom()\r\n      .scaleExtent([0.5, 2])\r\n      .on(\"zoom\", (event) => {\r\n        // zoom handler now fully controls g's transform\r\n        g.attr(\"transform\", event.transform);\r\n      });\r\n\r\n    zoomRef.current = zoom;\r\n    svg.call(zoom);\r\n\r\n    // set initial transform so zoom behavior has the same starting translate+scale\r\n    const initialTransform = d3.zoomIdentity\r\n      .translate(margin.left + width, margin.top)\r\n      .scale(0.7);\r\n    // this sets the current zoom transform (and triggers the zoom handler to update g)\r\n    if (!isTestEnv) {\r\n      d3.select(svgRef.current).call(zoom.transform, initialTransform);\r\n    }\r\n\r\n    const treeLayout = d3.tree().nodeSize([120, -280]);\r\n\r\n    const diagonal = d3\r\n      .linkHorizontal()\r\n      .x((d) => d.y)\r\n      .y((d) => d.x);\r\n\r\n    function collapseToDepth(node, currentDepth, maxDepth) {\r\n      if (!node.children) return;\r\n      if (currentDepth >= maxDepth) {\r\n        node._children = node.children;\r\n        node._children.forEach((child) =>\r\n          collapseToDepth(child, currentDepth + 1, maxDepth)\r\n        );\r\n        node.children = null;\r\n      } else {\r\n        node.children.forEach((child) =>\r\n          collapseToDepth(child, currentDepth + 1, maxDepth)\r\n        );\r\n      }\r\n    }\r\n\r\n    function zoomToNode(d) {\r\n      const isMobile = window.innerWidth < 768;\r\n      const scale = isMobile ? 1 : 1.2;\r\n\r\n      const bbox = svgRef.current.getBoundingClientRect();\r\n      const svgWidth = bbox.width;\r\n      const svgHeight = bbox.height;\r\n\r\n      // node screen coords without any transform are (d.y, d.x)\r\n      const x = d.y;\r\n      const y = d.x;\r\n\r\n      // To center the node: tx = svgWidth/2 - scale * x, ty = svgHeight/2 - scale * y\r\n      const translate = isMobile\r\n        ? [svgWidth / 0.8 - x * scale, svgHeight / 2 - y * scale]\r\n        : [svgWidth / 2 - x * scale, svgHeight / 2 - y * scale];\r\n\r\n      d3.select(svgRef.current)\r\n        .transition()\r\n        .duration(duration)\r\n        .call(\r\n          zoomRef.current.transform,\r\n          d3.zoomIdentity.translate(...translate).scale(scale)\r\n        );\r\n    }\r\n\r\n    function update(source) {\r\n      const treeData = treeLayout(root);\r\n      const nodes = treeData.descendants();\r\n      const links = treeData.links();\r\n\r\n      const node = g\r\n        .selectAll(\"g.node\")\r\n        .data(nodes, (d) => d.id || (d.id = ++i));\r\n\r\n      const nodeEnter = node\r\n        .enter()\r\n        .append(\"g\")\r\n        .attr(\"class\", \"node\")\r\n        .attr(\"transform\", (_) => `translate(${source.y0},${source.x0})`)\r\n        .on(\"click\", (_, d) => {\r\n          if (d.children) {\r\n            d._children = d.children;\r\n            d.children = null;\r\n            update(d);\r\n            zoomToNode(d);\r\n          } else {\r\n            d.children = d._children;\r\n            d._children = null;\r\n            update(d);\r\n            zoomToNode(d);\r\n          }\r\n        });\r\n\r\n      nodeEnter\r\n        .append(\"foreignObject\")\r\n        .attr(\"x\", -190)\r\n        .attr(\"y\", (d) => (d.data.stage ? -35 : -18.5))\r\n        .attr(\"width\", 190)\r\n        .attr(\"height\", 120)\r\n        .append(\"xhtml:div\")\r\n        .attr(\r\n          \"class\",\r\n          (d) =>\r\n            `${styles.nodeBox} ${\r\n              d._children || d.children ? styles.hasChildren : \"\"\r\n            }`\r\n        )\r\n        .html(\r\n          (d) =>\r\n            `<div  style=\"display:flex\"  >\r\n              \r\n            <div style=\"width:100%\" >\r\n            ${\r\n              d.data.stage\r\n                ? `<div \r\n              style=\"background-color:white;border-radius:0px 6px 0px 0px;padding:5px\" \r\n              >\r\n              ${d.data.stage}\r\n              </div>`\r\n                : \"<div></div>\"\r\n            }\r\n            <div \r\n            style=\"margin-top:${d.data.stage ? \"5px\" : \"0px\"};padding:5px\" \r\n            >\r\n            ${d.data.name}\r\n            </div>\r\n            </div>\r\n            ${\r\n              d.data.percent\r\n                ? `<div style=\"width:50%;background-color:white;display:flex;align-items:center;justify-content:center;border-radius:6px 0px 0px 6px;border-right:solid 1px var(--adl-yellow)\" >${\r\n                    d.data.percent + \"%\"\r\n                  }</div>`\r\n                : \"<div></div>\"\r\n            }\r\n            </div>`\r\n        );\r\n\r\n      const nodeUpdate = nodeEnter.merge(node);\r\n\r\n      nodeUpdate\r\n        .transition()\r\n        .duration(duration)\r\n        .attr(\"transform\", (d) => `translate(${d.y},${d.x})`);\r\n\r\n      node\r\n        .exit()\r\n        .transition()\r\n        .duration(duration)\r\n        .attr(\"transform\", (_) => `translate(${source.y},${source.x})`)\r\n        .remove();\r\n\r\n      const link = g.selectAll(\"path.link\").data(links, (d) => d.target.id);\r\n\r\n      const linkEnter = link\r\n        .enter()\r\n        .insert(\"path\", \"g\")\r\n        .attr(\"class\", \"link\")\r\n        .attr(\"fill\",\"none\")\r\n        .attr(\"stroke\",\"black\")\r\n        .attr(\"stroke-width\",\"1px\")\r\n        .attr(\"d\", (_) => {\r\n          const o = { x: source.x0, y: source.y0 };\r\n          return diagonal({ source: o, target: o });\r\n        });\r\n\r\n      linkEnter.merge(link).transition().duration(duration).attr(\"d\", diagonal);\r\n\r\n      link\r\n        .exit()\r\n        .transition()\r\n        .duration(duration)\r\n        .attr(\"d\", (_) => {\r\n          const o = { x: source.x, y: source.y };\r\n          return diagonal({ source: o, target: o });\r\n        })\r\n        .remove();\r\n\r\n      nodes.forEach((d) => {\r\n        d.x0 = d.x;\r\n        d.y0 = d.y;\r\n      });\r\n    }\r\n\r\n    update(root);\r\n  }, [data, initialOpenDepth]);\r\n\r\n  const zoomIn = () => {\r\n    if (zoomRef.current && svgRef.current) {\r\n      d3.select(svgRef.current).transition().call(zoomRef.current.scaleBy, 1.2);\r\n    }\r\n  };\r\n\r\n  const zoomOut = () => {\r\n    if (zoomRef.current && svgRef.current) {\r\n      d3.select(svgRef.current).transition().call(zoomRef.current.scaleBy, 0.8);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ position: \"relative\" }}>\r\n      <svg ref={svgRef} className={styles.container} />\r\n\r\n      <div className={styles.zoomButtons}>\r\n        <button className={styles.zoomButton} onClick={zoomIn}>\r\n          +\r\n        </button>\r\n        <button className={styles.zoomButton} onClick={zoomOut}>\r\n          âˆ’\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TreeDiagram;\r\n"],"names":["TreeDiagram$1","_ref","data","_ref$initialOpenDepth","initialOpenDepth","svgRef","useRef","gRef","zoomRef","isTestEnv","window","VITEST","useEffect","containerWidth","current","parentElement","clientWidth","margin","width","height","duration","i","root","d3","hierarchy","y0","x0","collapseToDepth","node","currentDepth","maxDepth","children","_children","forEach","child","svg","select","attr","concat","selectAll","remove","g","append","zoom","scaleExtent","on","event","transform","call","initialTransform","zoomIdentity","translate","scale","treeLayout","tree","nodeSize","diagonal","linkHorizontal","x","d","y","update","source","treeData","nodes","descendants","links","id","nodeEnter","enter","_","zoomToNode","stage","styles","html","name","percent","merge","transition","exit","link","target","insert","o","_d3$zoomIdentity","isMobile","innerWidth","bbox","getBoundingClientRect","svgWidth","svgHeight","apply","React","createElement","style","position","ref","className","onClick","scaleBy"],"mappings":"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"}